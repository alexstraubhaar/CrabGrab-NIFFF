
package ch.hearc.coursjava.kitbase.collection;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Set;
import java.util.TreeSet;

public class UseTemp
	{

	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/

	public static void main(String[] args)
		{
		main();
		}

	public static void main()
		{
		ArrayList<Set<String>> list = new ArrayList<Set<String>>();
		peupler(list);
		afficher(list);
		}

	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/

	private static void afficher(ArrayList<Set<String>> list)
		{
		//v1
		Iterator<Set<String>> listIt = list.iterator();
		while(listIt.hasNext())
			{
			Set<String> set = listIt.next();

			//v1.1
			Iterator<String> setIt = set.iterator();
			while(setIt.hasNext())
				{
				String element = setIt.next();
				System.out.println(element);
				}

			//v1.2
			for(String element:set)
				{
				System.out.println(element);
				}

			//v1.3
			System.out.println(set);
			}

		//v2
		for(Set<String> set:list)
			{
			//v2.1
			Iterator<String> setIt = set.iterator();
			while(setIt.hasNext())
				{
				String element = setIt.next();
				System.out.println(element);
				}

			//v2.2
			for(String element:set)
				{
				System.out.println(element);
				}
			
			//v2.3
			System.out.println(set);
			}

		//v3
		System.out.println(list);

		}

	private static void peupler(ArrayList<Set<String>> list)
		{
		for(int i = 1; i <= 3; i++)
			{
			Set<String> set = new TreeSet<String>();
			peupler(set, i);
			list.add(set);
			}
		}

	private static void peupler(Set<String> set, int n)
		{
		for(int i = 1; i <= 3; i++)
			{
			String value = "a" + i + zero(n);
			set.add(value);
			}
		}

	private static String zero(int n)
		{
		String s = new String();
		for(int i = 1; i <= n; i++)
			{
			s += "0";
			}
		return s;
		}
	}
