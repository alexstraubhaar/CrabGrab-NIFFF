
package ch.hearc.coursjava.io.file.persistance.properties;

import java.awt.BorderLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Properties;

import javax.swing.JFrame;

public class JFrameProperties extends JFrame
	{

	/*------------------------------------------------------------------*\
	|*							Constructeurs							*|
	\*------------------------------------------------------------------*/

	public JFrameProperties()
		{
		geometry();
		control();
		appearance();
		loadPreference();
		}

	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/

	/*------------------------------*\
	|*				Set				*|
	\*------------------------------*/

	/*------------------------------*\
	|*				Get				*|
	\*------------------------------*/

	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/

	private void savePreference()
		{
		Properties properties = new Properties();
		properties.setProperty("x", this.getLocation().x + "");
		properties.setProperty("y", this.getLocation().y + "");
		properties.setProperty("w", this.getWidth() + "");
		properties.setProperty("h", this.getHeight() + "");

		try
			{
			FILE_PROPERTIES.getParentFile().mkdirs(); //Utile si FILE_PROPERTIES est dans un folder
			FileOutputStream fos = new FileOutputStream(FILE_PROPERTIES);
			BufferedOutputStream bos = new BufferedOutputStream(fos);

			properties.store(bos, "Fenêtre caracteristique");

			bos.close();
			fos.close();
			}
		catch (Exception e)
			{
			System.err.println("Impossible de sauver les préferences applicatives");
			}
		}

	private void loadPreference()
		{
		Properties properties = new Properties();

		//V1
		try
			{
			FileInputStream fis = new FileInputStream(FILE_PROPERTIES);
			BufferedInputStream bis = new BufferedInputStream(fis);

			properties.load(bis);

			bis.close();
			fis.close();
			}
		catch (Exception e)
			{
			}

		//V2
		if(FILE_PROPERTIES.exists())
			{
			try
				{
				FileInputStream fis = new FileInputStream(FILE_PROPERTIES);
				BufferedInputStream bis = new BufferedInputStream(fis);

				properties.load(bis);

				bis.close();
				fis.close();
				}
			catch (Exception e)
				{
				System.err.println("Impossible de loader les préferences");
				}
			}

		int x = Integer.valueOf(properties.getProperty("x", "100"));
		int y = Integer.valueOf(properties.getProperty("y", "150"));
		int w = Integer.valueOf(properties.getProperty("w", "200"));
		int h = Integer.valueOf(properties.getProperty("h", "300"));

		setLocation(x, y);
		setSize(w, h);
		}

	private void geometry()
		{
			// JComponent : Instanciation

			// Layout : Specification
			{
			BorderLayout borderLayout = new BorderLayout();
			setLayout(borderLayout);

			// borderLayout.setHgap(20);
			// borderLayout.setVgap(20);
			}

		// JComponent : add
		//add(TODO,BorderLayout.CENTER);
		}

	private void control()
		{
		addWindowListener(new WindowAdapter()
			{

				@Override
				public void windowClosing(WindowEvent e)
					{
					savePreference();
					System.exit(0); // 0 normal, -1 anormal
					}
			});
		}

	private void appearance()
		{
		setSize(600, 400);
		setLocationRelativeTo(null); // frame centrer
		setVisible(true); // last!
		}

	/*------------------------------------------------------------------*\
	|*							Attributs Private						*|
	\*------------------------------------------------------------------*/

	// Tools
	/*------------------------------*\
	|*			  Static			*|
	\*------------------------------*/

	private static final File FILE_PROPERTIES = new File("./Settings/XXX/YYY/TTT/SettingsFenetre.txt");
	}
