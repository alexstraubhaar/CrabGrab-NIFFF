
package ch.hearc.coursjava.moo.enumeration.quadratic;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;

import org.junit.Assert;

public class UseQuadraticEnumB
	{

	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/

	public static void main(String[] args)
		{
		parse(args);

		}

	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/
	
	private static Map<ABC, Double> parser(String[] tabABC)
		{
		Assert.assertTrue(tabABC.length == 3);
		HashMap<ABC, Double> mapABC = new HashMap<ABC, Double>(3);
		for(String bloc:tabABC)
			{
			parserBloc(bloc, mapABC);
			}
		return mapABC;
		}

	private static void parserBloc(String bloc, HashMap<ABC, Double> mapABC)
		{
		String[] tab = bloc.split("=");
		String key = tab[0];
		ABC abc = toABC(key);

		String value = tab[1];
		double valeur = toDouble(value);
		mapABC.put(abc, valeur);
		}

	private static double toDouble(String value)
		{
		try
			{
			return Double.valueOf(value);
			}
		catch (NumberFormatException e)
			{
			System.err.println("Could not convert " + str + " to double");
			System.exit(0); // 0 normal, -1 anormal
			return -1;
			}
		}

	private static ABC toABC(String key)
		{
		try
			{
			return ABC.valueOf(key);
			}
		catch (Exception e)
			{
			System.err.println("Could not find argument specified with " + key);
			System.err.println("Correct values: " + Arrays.toString(ABC.values()));

			System.exit(-1); // 0 normal, -1 anormal
			return null;
			}
		}
	}
